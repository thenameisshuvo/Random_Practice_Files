class Process:
    def __init__(self, name, burst_time):
        self.name = name
        self.burst_time = burst_time
        self.waiting_time = 0
        self.turnaround_time = 0

def nonpreemptive_fcfs_scheduling(processes):
    current_time = 0
    completed_processes = []

    for process in processes:
        process.waiting_time = current_time
        process.turnaround_time = process.waiting_time + process.burst_time
        current_time += process.burst_time
        completed_processes.append(process)

    # Calculate average waiting time
    average_waiting_time = sum(p.waiting_time for p in completed_processes) / len(completed_processes)
    return average_waiting_time

# Example usage
processes = [
    Process("P1", 5),
    Process("P2", 3),
    Process("P3", 8),
    Process("P4", 2),
]

average_waiting_time = nonpreemptive_fcfs_scheduling(processes)
print("Average Waiting Time:", average_waiting_time)
